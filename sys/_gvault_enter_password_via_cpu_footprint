#!/usr/local/_gvault/bin/perl

# Example gVault PEPPER file which looks at your CPU and makes a PEPPER from that.
# Caution... CPU info can change which means that everything is fucked...
# use with caution, only use on BARE METAL and consider backing it up to another vault or seperate system...

print ( 
    from_my_cpu_footprint() . "\n" 
);


sub from_my_cpu_footprint {
  use Digest::SHA qw(sha1_hex);
  my $system_pepper_actual = '';
  my @system_pepper_source = `/usr/bin/cat /proc/cpuinfo | /usr/bin/sort`; ## get's the cpu info of this system and sorts it.. hopefully. Could also read directly from /proc/.
                                                                           ## might not work on all systems but here is the "idea" not the solution.
  foreach my $pepper_source (@system_pepper_source) {
    $system_pepper_actual .= $pepper_source  if  $pepper_source=~m/^model/  or  $pepper_source=~m/^vendor/  or  $pepper_source=~m/^cpu family/  or  $pepper_source=~m/^cache/  or  $pepper_source=~m/^bugs/;
  }
  return sha1_hex( $system_pepper_actual . "b4 30 55 e1 23 a2 73 83" );
}    
     #                               -->>  /\ /\ PEPPER PEPPER /\  /\
     #
     #   The PEPPER PEPPER can be any text, anything you like.
     #   Adding a UNIQUE PEPPER PEPPER is recommended but optional.
     #   Just 8 x random HEX bytes is just perfect... see below:
     #
     # Use https://www.random.org/integers/?num=8&min=1&max=100&col=1&base=16&format=html&rnd=new
